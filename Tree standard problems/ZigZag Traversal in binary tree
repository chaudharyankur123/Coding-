vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>result;
        if(root==NULL)
            return result;
        queue<TreeNode*>q;
        q.push(root);
        bool leftToright=true;
        while(!q.empty()){
            int size=q.size();
            vector<int>ans(size);
            for(int i=0;i<size;i++){
                TreeNode*node=q.front();
                q.pop();
                int index=(leftToright) ? i: (size-1-i);// find position to fill the nodes values
                ans[index]=node->val;
                if(node->left!=NULL)
                    q.push(node->left);
                if(node->right!=NULL)
                    q.push(node->right);
            }
        
        leftToright=!leftToright;
        result.push_back(ans);
        }
    
    return result;
    }
    
    // Time Complexity=O(n)
    // space Complexity=O(n)
